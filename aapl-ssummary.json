    def processGoldenGeese(self, operationCenter, listRawGeeseMetrics):
        # self.refreshHardMetrics()
        print("listRawGeeseMetrics: "+ str(listRawGeeseMetrics))
        listFilteredGeeseMetrics = [[listRawGeeseMetrics[0],listRawGeeseMetrics[1],2.03, #listRawGeeseMetrics[2],
                                     listRawGeeseMetrics[3],listRawGeeseMetrics[4]],
                                    [listRawGeeseMetrics[5],listRawGeeseMetrics[6], 2.02,#listRawGeeseMetrics[7],
                                     listRawGeeseMetrics[8],listRawGeeseMetrics[9]],
                                    [listRawGeeseMetrics[10],listRawGeeseMetrics[11],2.01,#listRawGeeseMetrics[12],
                                     listRawGeeseMetrics[13], listRawGeeseMetrics[14]]]



        #Succesful list, initial criteria met
        listSuccessfulGeeseMetrics = []
        for filteredGeeseMetrics in listFilteredGeeseMetrics:
            if(self.isGoldenGoose(filteredGeeseMetrics)):
                listSuccessfulGeeseMetrics.append([filteredGeeseMetrics, 1])
            else:
                listSuccessfulGeeseMetrics.append([filteredGeeseMetrics, 0])



        #Priority highest DM, extend all others, fixed priority MM handle, check priority 11
        listSuccessfulGeeseMetrics = self.compareGeesePrices(listSuccessfulGeeseMetrics)

        operationCenter.setListGoldenGeese(listSuccessfulGeeseMetrics)
        print("List flying geese: " + str(operationCenter.getListGoldenGeese()))

        # Isolate if determined
        isChosenDetermined = self.calculateIsChosenDetermined(listSuccessfulGeeseMetrics)

        print("isChosenDetermined: "+ str(isChosenDetermined))
        # response = self.nodeRequester.postGoldenGooseResult(isChosenDetermined,"POP",0,"DOG",1,"MOM", 0)
        print("listSuccessfulGeeseMetrics :" + str(listSuccessfulGeeseMetrics))
        sublist1 = listSuccessfulGeeseMetrics[0]
        sublist2 = listSuccessfulGeeseMetrics[1]
        sublist3 = listSuccessfulGeeseMetrics[2]
        sublistSymbol1 = sublist1[0][0]
        sublistSymbol2 = sublist2[0][0]
        sublistSymbol3 = sublist3[0][0]
        sublistPriority1 = sublist1[1]
        sublistPriority2 = sublist2[1]
        sublistPriority3 = sublist3[1]


        print("sublist: " + str(sublistSymbol1) + str(sublistPriority1))
        # print("sublist: "+str(sublist2[0][0]))
        # print("sublist: " + str(sublist3[0][0]))


        #Frankly bayliss remember alt reality and reaching it twice as fast.
        #Remember in your alt reality they are your friend.

        # print("listSuccessfulGooseMetrics[0][1] :"+str(listSuccessfulGooseMetrics[0][1]))
        # print("listSuccessfulGooseMetrics[0][0] :"+str(listSuccessfulGooseMetrics[0][0]))
        response = self.nodeRequester.postGoldenGooseResult(isChosenDetermined, sublistSymbol1, sublistPriority1,
                                                            sublistSymbol2, sublistPriority2,
                                                            sublistSymbol3, sublistPriority3)

Here the stand is made.




Now what to Handle data manager creation. 
Handle multi-variant support for data_managers in MM.

We are intaking information, and passed through API... of MM.
Now handle further.

Intake golden goose multi-variant support
All of existence all at once, all of existence in a paper cup.

Where in MM is it still static

Error:
tag_data_managers

Why is GG report still static, 3 reports...
Well there are only top three right now in report makes sense,
Consecutive attempts will show more running data_managers

----
Why string wrapping of list to be added...
Intake at Node, why becoming string there,
or at Neo posting.
golden_goose_report: {'_id': '5cb21fa410cb536734835dff', 'dateCreated': '04/13/2019', 'isChosenDetermined': '1', 
'dataList': ["[['PCG', '20.65', 2.03], 2]", "[['APC', '32.01', 2.02], 1]", "[['JMIA', '34.35', 2.01], 1]"], 
'epochCreated': '1555177380', '__v': 0}

self.listValues?

isContinueOperations = int(stock_observance_rotation_manager.intake_query(golden_goose_report))

Handle intake_query.
All existence all at once, all existence in a papercup.


listRawGeeseMetrics: [{'_id': '5cb22ae0cd4c446a3c3f0146', 'second_created': '56', 'minute_created': '30', 'hour_created': '12', 'epoch_created': '1555180256', 'ask': '0.00', 'bid': '0.00', 'pchg': '20.65', 'last': '23.08', 'symbol': 'PCG'}, {'_id': '5cb22ae0cd4c446a3c3f0147', 'second_created': '56', 'minute_created': '30', 'hour_created': '12', 'epoch_created': '1555180256', 'ask': '0.00', 'bid': '0.00', 'pchg': '32.01', 'last': '61.78', 'symbol': 'APC'}, {'_id': '5cb22ae0cd4c446a3c3f0145', 'second_created': '56', 'minute_created': '30', 'hour_created': '12', 'epoch_created': '1555180256', 'ask': '0.0000', 'bid': '0.0000', 'pchg': '34.35', 'last': '25.4600', 'symbol': 'JMIA'}]

"dataList": [[['PCG', '20.65', 2.03], 2], [['APC', '32.01', 2.02], 1], [['JMIA', '34.35', 2.01], 1]],

JSON: {'request_type': 'intakeGoldenGooseResultStore', 'isChosenDetermined': 1, 'listPrioritizedGeeseMetrics': [[['PCG', 20.65, 2.03], 2], [['APC', 32.01, 2.02], 1], [['JMIA', 34.35, 2.01], 1]]}

I dont buy into it.


if key == 'data_list':
    dataList = value
    self.list_values = dataList
    print("data_list: "+str(self.list_values))

Verify list_values now, what did it hold before the transition

postGoldenGooseResult still acting up.
console.log("intakeGoldenGooseResultStore: "+req.body);

Verify storage of GGResults.



Stroing data_list as list without string creation.
Mongoose store list of lists without turning them to string.
Or, split string into values, take values and add to list. 
Then send list in JSON request.

I just want to save a list of list objects....
OR create data_list objects to store, like day_sets.


postToPythonBird1: { _id: 5cb25d0c396a956d29a00f77,
  day_created: '04/13/2019',
  is_chosen_determined: '1',
  epoch_created: '1555193101',
  __v: 0,
  data_list: 
   [ '[[\'PCG\', 20.65, 2.03], 2]',
     '[[\'JMIA\', 34.35, 2.02], 1]',
     '[[\'APC\', 32.01, 2.01], 1]' ] }


within list, get index, split index string.
then symbol remove the quotation. 


data_list


I'm getting fucking no sex because I'm an invertebrate.

keep it together man,


parse_data_list

youre going to take a swing at me.
go ahead and do it.

going focused too early.
keep it soft.


#Goose iteration process occured.
            if(self.get_is_initial_golden_goose_process_completed() == "1"):
                self.type_converter.reset_instance_values()

create test scenario where handle second iteration different stocjks.

How to handle multi-variant iteration support
    Test matching stock symbols,
    Test, new stock symbols. 


how to handle stock entered.
We can do live tests in MM to test,

Send list multiple stock entries.

read multi entry list.
    Can we send expanded list directly 
    from testing

From extended init, fake data Symbols in, 
test.
Or run int tests testing functionality....


It hurts when you stop or switch back and forth doesn't it so don't stop for anything.
Don't stop for anything that is causing pain.
There is no pain suffering, and there is no should.




start_background_loop_assemble_extended_data_manager

April 19 2019.
Bayliss paradigm shifted.
To get away from the negative habits and ascend into the new.
You have to get rid of the old to get the new.

We're all special and I want you to see the speicalness in me as I see it in you.'

And whats wrong with that taking all the credit for all that was done? 
Whether by you or not by you.
What's wrong with that. it's just different.

Unlock the genius inside of everyone.
The continuous journey to see the unseen, and make real the unobtainable.

To make real.

To become different.


Jealousy anger admiration envy.
Pressent and alert.

Feeling like an imposter for having curly hair. 

No feeling of dread, unease, cost unspent no thing unseen.
To not really care is the only answer indeed.
To pass into antiquity so slow in peace. 

Complexity, clean feeling, of putting things together and working with advanced technology.

This mass suffering must be worth something.
Must benefit something, must do something. 

Suffering comes from overthinking of what is not.
Focus on the now and what is. 
Adult mind needs to be fluid like a child it needs to taught to accept the foriegn feeling of not knowing.

Their existence my own existence, my own self, my ego, my programming, my paradigm, my teachings,
are wrong. This culture is wrong.

That dull rotting pain. That sinks you down.





if 10:30 do buy procedure 
Buy procedure -> upon buy confirmed, 
Breach watch sell.
GG breach watcher, 

If 10:30 time perform trade.

Past the point of defeat. Self-destructive.
Loss, feel nothing, care nothing.
Disconnect, completely.



        #For breach watch buy will also need balance information,
            #Balance information drawn from node, then buy local.

At least I get to decide my fate, as a sad miserable creature that was given tools he can't use.

Or he won't use.

Shutting down depression.
No I will not let my paradigm control me, no I will not let my culture control me.
No I will not let my schizophrenia control me.

You defend nothing but an empty castle. An empty boy.



























